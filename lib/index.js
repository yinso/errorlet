// Generated by CoffeeScript 1.4.0
(function() {
  var AppError,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  AppError = (function(_super) {

    __extends(AppError, _super);

    AppError.isa = function(obj) {
      return obj instanceof this;
    };

    AppError.raise = function(params) {
      var err;
      if (params == null) {
        params = {};
      }
      err = this.create(params);
      throw err;
    };

    AppError.create = function(params) {
      if (params == null) {
        params = {};
      }
      return new this(params);
    };

    function AppError(params) {
      var key, val;
      if (params == null) {
        params = {};
      }
      AppError.__super__.constructor.call(this);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      }
      for (key in params) {
        val = params[key];
        this[key] = val;
      }
      if (params.hasOwnProperty('error')) {
        this.name = params.error;
      } else {
        this.name = 'AppError';
      }
    }

    return AppError;

  })(Error);

  module.exports = AppError;

}).call(this);
